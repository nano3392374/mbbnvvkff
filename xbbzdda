for _,v in pairs(game.Players.LocalPlayer.Character.Sword:GetDescendants()) do
if v:IsA("BasePart") then
v.Size = Vector3.new(25,25,25)
v.Transparency = 1
end
end
game:GetService("Players").LocalPlayer.CameraMaxZoomDistance = 9e9


local WatchoutPlayer = {"vXiesnW","jojotheultimate","LokeKvasir","UNDEADINDUSTRY","HorizonPoint","xpopSin","Aozaki_Aoko","Enderro","AnakinUnico","Potatar","devin2000010","SavonTheGreat","magoogamer24","midsomah","Shadow_Claw600","ShadowYoite","Gudaou","Hawkixs","Flames98765","DustynYTB","VentaIity","Obstrucion","Bell_Cranel25","Not_S3V","ElderlyRobloxPlayer","Skellvex","ChippyThePenguin","Lady_Laura66","Inf1n1tylt","leirach","Divinity_XVI","Nexus_IV","Firefly_Gardener","Felipefe_hd","GamerJorusHoth","nimbus64","chsewo_n","jengilis","Zuyashi","BloodBorn_Loonatic","badenglishj","kens1ies","AOKO_A0ZAKI"}
local getupvalue = getupvalue or debug.getupvalue;
local httpService = game:GetService("HttpService");
local players = game:GetService("Players");
local replicatedStorage = game:GetService("ReplicatedStorage");
local tweenService = game:GetService("TweenService");
local starterGui = game:GetService("StarterGui");
local animtracks = game.Players.LocalPlayer.Character.Humanoid:GetPlayingAnimationTracks()
local client = players.LocalPlayer;
	local _=Instance.new("Part",workspace) 
	_.Size=Vector3.new(10,1,10)
	_.CFrame=client.Character.HumanoidRootPart.CFrame+Vector3.new(0,-4,0) 
	_.Transparency=0.8
	_.Anchored=true
	_.Name="LOWL" 
local runService = game:GetService("RunService");
local heartbeat = runService.Heartbeat;
local TeleportSpeed = 250;
local NextFrame = runService.Heartbeat;

local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/LegoHacks/Utilities/main/UI.lua"))();

-- Main Script

local mobs = {
    [4734865416] = {-- floor 2
        "Boar";
        "Wolf";
        "Kobold Sentinel";
        "Corrupted Sentinel";
    };

    [4735703075] = {-- floor 3
        "Swamp Cobra";
        "Swamp Snake";
        "Marshland Crocodile";
        "Snail";
    };

    [4735718710] = {-- floor 4
        "Egyptian Cobra";
        "Sand Scorpion";
        "Blood Scorphion";
        "Albino Scorpion";
    };

    [4736649014] = {-- floor 5
        "Winter Wolf";
        "Frost Chaurus";
        "White Baby Wyrm";
    };

    [4736759720] = {-- floor 6
        "Flame Boar";
        "Blood Wolf";
        "Ember Spider";
        "Twin-Tailed Blood Wolf";
        "Bloodsilk Spider";
    };

    [4736984932] = {-- floor 7
        "Chomper";
        "Magic Shroom";
        "Forest Wolf";
        "Spriggan";
        "Stone Golem";
        "Blue Crystal Golem";
        "Red Crystal Golem";
    };

    [4737916764] = {-- floor 8
        "Worm";
        "Lizard";
        "Skeleton";
        "Shadow Walker";
    };

    [4740039076] = {-- floor 9
        "Giant Crab";
        "Sea Turtle";
        "Octopus";
        "Jellyfish";
        "Atlantian Guard";
    };

    [4747247314] = {-- floor 10
        "Praying Mantis";
        "Dragon";
        "Samurai";
        "Dead Samurai";
        "Oni";
    };

    [5135551944] = {-- floor 11
        "Commoner";
        "Knight";
        "Noble";
        "Fallen Noble";
    };

    [5212666689] = {-- floor 12
        "Giant Venus Flytrap";
        "Land Anemone";
        "Garish Garbera";
    };
    [10299594856] = {---4 Highest
        "Summer Crab";
        "Summer Turtle";
    };
    [6000711615] = {---1 Highest
        "Summer Crab";
        "Summer Turtle";
    };
    [9455484005] = {---3 Highest
        "Summer Crab";
        "Summer Turtle";
    };
};

local bosses = {
    [4734865416] = {-- floor 2
        "Illfang the Kobold Pupper";
        "Illfang the Kobold Lord";
        "Shadesworn the Corrupted";
    };

    [4735703075] = {-- floor 3
        "Lord Slug";
    };

    [4735718710] = {-- floor 4
        "Stallord";
    };

    [4736649014] = {-- floor 5
        "X'rphan the White Wyrm";
    };

    [4736759720] = {-- floor 6
        "Spectral Porky";
        "Uakmaroth, the Demon Lord";
    };

    [4736984932] = {-- floor 7
        "Storm Atronach";
    };

    [4737916764] = {-- floor 8
        "Bonnz the Skeleton Lord";
    };

    [4740039076] = {-- floor 9
        "Guardian of the Gate";
        "Karth'uk The Crystal Kraken";
    };

    [4747247314] = {-- floor 10
        "Hotoke The Enlightened";
    };

    [5135551944] = {-- floor 11
        "Beatrice the Impartial Queen";
        "Grimlock the Fallen King";
    };

    [5212666689] = {-- floor 12
        "Giant Venus Flytrap";
        "Land Anemone";
        "Garish Garbera";
    };
    
    [5136611550] = {-- floor 13
        "";
    };
    
    [4733293091] = {-- floor 14
        "";
    };
    
    [11987483716] = {-- floor 15
        "";
    };
    
    [11987539001] = {-- floor 16
        "";
    };
    
    [12632324801] = {-- floor 17
        "";
    };

    [10299594856] = {---4 Highest
        "Carcinus";
    };
   [6000711615] = {---1 Highest
        "Carcinus";
    };
    [9455484005] = {---3 Highest
        "Carcinus";
    };


};











local function getClosestMob()
    local distance, mob = math.huge;
    for i, v in next, workspace.Mobs:GetChildren() do
        if (v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid").Health > 0 ) then
            if (library.flags.bosses) then
                for a, b in next, bosses[game.PlaceId] do
                    if (b == v:FindFirstChild("Config").Entity.Value) then
                    
                        return v;
                    end;
                end;
            end;

            local distanceFromChar = client:DistanceFromCharacter(v.HumanoidRootPart.Position);
            if (distanceFromChar < distance) then
                if ((library.flags.chosen_mob and v.Config.Entity.Value == library.flags.chosen_mob) or (library.flags.chosen_mob2 and v.Config.Entity.Value == library.flags.chosen_mob2)) then
                    distance = distanceFromChar;
                    mob = v;
                end;
            end;
        end;
    end;

    return mob;
end;



function isnil(thing)
return (thing == nil)
end


local function round(n)
return math.floor(tonumber(n) + 0.5)
end

function UpdatePlayerChams()
for i,v in pairs(game:GetService'Players':GetChildren()) do
pcall(function()
if not isnil(v.Character) and v.Name ~= client.Name then
for _,k in pairs(v.Character:GetChildren()) do
if k:IsA'BasePart' and not k:FindFirstChild'Cham' then
local cham = Instance.new('BoxHandleAdornment',k)
cham.ZIndex= 10
cham.Adornee=k
cham.AlwaysOnTop=true
cham.Size=k.Size
cham.Transparency=.7
cham.Color3=Color3.new(1,0,0)
cham.Name = 'Cham'
end
end
if not isnil(v.Character.Head) and not v.Character.Head:FindFirstChild'NameEsp' then
local bill = Instance.new('BillboardGui',v.Character.Head)
bill.Name = 'NameEsp'
bill.Size=UDim2.new(1,200,1,30)
bill.Adornee=v.Character.Head
bill.AlwaysOnTop=true
local name = Instance.new('TextLabel',bill)
name.TextWrapped=true
name.Text = (v.Name ..' '.. round((game:GetService('Players').LocalPlayer.Character.Head.Position - v.Character.Head.Position).Magnitude/3) ..'m')
name.Size = UDim2.new(1,0,1,0)
name.TextYAlignment='Top'
name.TextColor3=Color3.new(1,1,1)
name.BackgroundTransparency=1
else
v.Character.Head.NameEsp.TextLabel.Text = (v.Name ..' '.. round((game:GetService('Players').LocalPlayer.Character.Head.Position - v.Character.Head.Position).Magnitude/3) ..'m')
end
end
end)
end
end



local function ImprovedTeleport(Target)
    if (typeof(Target) == "Instance" and Target:IsA("BasePart")) then Target = Target.Position; end;
    if (typeof(Target) == "CFrame") then Target = Target.p end;

    local HRP = (client.Character and client.Character:FindFirstChild("HumanoidRootPart"));
    if (not HRP) then return; end;

    local StartingPosition = HRP.Position;
    local PositionDelta = (Target - StartingPosition);--Calculating the difference between the start and end positions.
    local StartTime = tick();
    local TotalDuration = (StartingPosition - Target).magnitude / TeleportSpeed;

    repeat NextFrame:Wait();
        local Delta = tick() - StartTime;
        local Progress = math.min(Delta / TotalDuration, 1);--Getting the percentage of completion of the teleport (between 0-1, not 0-100)
        local MappedPosition = StartingPosition + (PositionDelta * Progress);
        HRP.Velocity = Vector3.new();
        HRP.CFrame = CFrame.new(MappedPosition);
        
local mobA = getClosestMob();
    until mobA ~= nil or (HRP.Position - Target).magnitude <= TeleportSpeed / 2;
    HRP.Anchored = false;
    HRP.CFrame = CFrame.new(Target);
end;

spawn(function()
repeat wait() until game:IsLoaded()
    game:GetService("Players").LocalPlayer.Idled:connect(function()
    game:GetService("VirtualUser"):ClickButton2(Vector2.new())
end)
end)

game:GetService('RunService').Stepped:connect(function()
    if (library.flags.autofarming) then
    pcall(function()
        _.CFrame = client.Character.HumanoidRootPart.CFrame+Vector3.new(0,-3.49,0)
        end)
    end

end)

local autoFarmTab = library:CreateWindow("Auto Farm");

autoFarmTab:AddToggle({
    text = "Enabled";
    flag = "autofarming"
});


autoFarmTab:AddToggle({
    text = "Prioritize Bosses";
    flag = "bosses"
});

autoFarmTab:AddSlider({
    text = "Attack Range";
    flag = "attack_range";
    min = 1;
    max = 20;
});

autoFarmTab:AddList({
    text = "Chosen Mob";
    flag = "chosen_mob";
    values = mobs[game.PlaceId];
});

autoFarmTab:AddList({
    text = "Chosen Mob2";
    flag = "chosen_mob2";
    values = mobs[game.PlaceId];
});


heartbeat:Connect(function()
 UpdatePlayerChams()
    if (client.Character and library.flags.autofarming) then
        for i, v in next, client.Character:GetChildren() do
            if (v:IsA("BasePart")) then
                v.CanCollide = false;
            end;
        end;
    end;
end);

safed = true
nofall = true
bigweapon = false
waitingtime = 2.5
fixpos = false
heartbeat:Connect(function()
        if  library.flags.autofarming then
        else
        safed = true
        nofall = true
        bigweapon = false
        end
      
end);


heartbeat:Connect(function()
          for i, v in next, game.Players:GetChildren() do
          if table.find(WatchoutPlayer,v.Name) then
           game:GetService("Players").LocalPlayer:Kick("RUN MOD/ADMIN IN THE SERVER.")
           game:Shutdown()
          end
          end
        
end);


spawn(function()
    while true do
if (library.flags.autofarming )  then
local mob = getClosestMob();
if (safed == true and mob and mob:FindFirstChild("HumanoidRootPart") and mob.HumanoidRootPart and (client.Character.HumanoidRootPart.Position - mob.HumanoidRootPart.Position).Magnitude <= library.flags.attack_range+10) then
safed = false
fixpos = true
wait(waitingtime)
fixpos = false
repeat
local mobs = getClosestMob();
local vu = game:GetService("VirtualUser")
if (client.Character.HumanoidRootPart.Position - mobs.HumanoidRootPart.Position).Magnitude <= library.flags.attack_range+10 then
vu:ClickButton1(Vector2.new(500,0), game.Workspace.CurrentCamera.CFrame)
ImprovedTeleport(Vector3.new(mobs.HumanoidRootPart.Position.X,mobs.HumanoidRootPart.Position.Y - library.flags.attack_range , mobs.HumanoidRootPart.Position.Z))
else
nofall = false
end
task.wait()
until not mobs or nofall == false or safed == true  or mobs.Humanoid.Health <= 0 or library.flags.autofarming == false;
nofall = false
repeat
local vim = game:GetService'VirtualInputManager'
local x = game:GetService("Players").LocalPlayer.PlayerGui.GameGui.ConsolePC.EquipButton
vim:SendMouseButtonEvent(x.AbsolutePosition.X+x.AbsoluteSize.X/2,x.AbsolutePosition.Y+50,0,true,x,1)
vim:SendMouseButtonEvent(x.AbsolutePosition.X+x.AbsoluteSize.X/2,x.AbsolutePosition.Y+50,0,false,x,1)
task.wait() until library.flags.autofarming == false or game:GetService("Players").LocalPlayer.PlayerGui.GameGui.ConsolePC.EquipButton.ImageColor3 == Color3.fromRGB(255, 255, 255)
repeat
local vim = game:GetService'VirtualInputManager'
local x = game:GetService("Players").LocalPlayer.PlayerGui.GameGui.ConsolePC.EquipButton
vim:SendMouseButtonEvent(x.AbsolutePosition.X+x.AbsoluteSize.X/2,x.AbsolutePosition.Y+50,0,true,x,1)
vim:SendMouseButtonEvent(x.AbsolutePosition.X+x.AbsoluteSize.X/2,x.AbsolutePosition.Y+50,0,false,x,1)
task.wait() until library.flags.autofarming == false or  game:GetService("Players").LocalPlayer.PlayerGui.GameGui.ConsolePC.EquipButton.ImageColor3 == Color3.fromRGB(96, 192, 255)
task.wait(0.5)
safed = true
nofall = true
end

if fixpos == true then
ImprovedTeleport(Vector3.new(mobs.HumanoidRootPart.Position.X,mobs.HumanoidRootPart.Position.Y - library.flags.attack_range , mobs.HumanoidRootPart.Position.Z))
end
if safed == true and mob and mob:FindFirstChild("HumanoidRootPart") and mob.HumanoidRootPart and (client.Character.HumanoidRootPart.Position - mob.HumanoidRootPart.Position).Magnitude > library.flags.attack_range+10 then
ImprovedTeleport(Vector3.new(mob.HumanoidRootPart.Position.X,mob.HumanoidRootPart.Position.Y - library.flags.attack_range,mob.HumanoidRootPart.Position.Z))
end;
end;
        task.wait();
    end;
end);

library:Init();
